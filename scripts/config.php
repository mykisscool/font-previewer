<?php
  /*
   * config.php
   *
   * This file sets up the fonts, pricing, colors, and checkout for the Font Previewer application
   */

  require_once('vendor/autoload.php');
  use font_previewer\ttfInfo;
  error_reporting(E_ERROR | E_WARNING | E_PARSE);

  define('__FONTS__', dirname(dirname(__FILE__)) . '/fonts/');

  // Stylesheets
  $styles = '';
  if ($handle = opendir(__FONTS__)) {
    while (false !== ($file = readdir($handle))) {
      if (is_dir(__FONTS__ . $file) && $file != '.' && $file != '..') {
        if ($subhandle = opendir(__FONTS__ . $file)) {
          while (false !== ($subfile = readdir($subhandle))) {
            if (strtolower(pathinfo($subfile, PATHINFO_EXTENSION)) == 'css') {
              $styles = $styles . '<link rel="stylesheet" media="all" type="text/css"  href="./fonts/' . $file . '/' . $subfile . '" />' . PHP_EOL;

              // Cleanse stylesheet :: Make sure that the PHP-generated code matches the font-family name generated by Font Squirrel
              $file_contents = file_get_contents(__FONTS__ . $file . '/' . $subfile);

              // I can't recall what this artifact did- but it's emptying the contents of the stylesheet
              // file_put_contents(__FONTS__ . $file . '/' . $subfile, preg_replace('/regular|bold|_/i', '', $file_contents));
            }
          }
        }
      }
    }
  }

  // Font array
  // key => font filename (ttf) w/o extension, value => font full-name (ttf)
  $fonts = array();
  $counter = 0;

  if ($handle = opendir(__FONTS__)) {
    while (false !== ($file = readdir($handle))) {
      if (is_dir(__FONTS__ . $file) && $file != '.' && $file != '..') {
        if ($subhandle = opendir(__FONTS__ . $file)) {
          while (false !== ($subfile = readdir($subhandle))) {
            if (strtolower(pathinfo($subfile, PATHINFO_EXTENSION)) == 'ttf') {

              $font_obj = new ttfInfo;
              $font_obj->setFontFile(__FONTS__ . $file . '/' . $subfile);
              $font_info = $font_obj->getFontInfo();

              $fonts[$file][$counter]['full'] = $font_info[4]; // div title, img alt
              $fonts[$file][$counter]['short'] = pathinfo($subfile, PATHINFO_FILENAME); // img id (font code)

              // Be mindful of this line when "fonts don't work"
              $fonts[$file][$counter]['fontface'] = strtolower(preg_replace('/[^A-Za-z0-9]/', '', preg_replace('/\s+|webfont|regular|bold/i', '', $font_info[4]))); // (css fontface name)

              $counter++;
            }
          }
          closedir($subhandle);
          $counter = 0;
        }
      }
    }
    closedir($handle);
  }

  // Price array
  // key => letter height, value => dollar amount per letter (not being used at this time)
  /*
  $pricing = array(
  1 => 0.25,
  2 => 0.50,
  3 => 0.75,
  4 => 1.00,
  5 => 1.25,
  6 => 1.50,
  7 => 1.75,
  8 => 2.00,
  9 => 2.25,
  10 => 2.50,
  11 => 2.75,
  12 => 3.00,
  13 => 3.25,
  14 => 3.50,
  15 => 3.75
  );
  */
  $pricing = array();
  $pricing['0.5'] = 0;
  foreach (range(1, 150) as $i) {
    $pricing[$i] = 0;
  }

  // Border-color array
  // key => color name, value => hexadecimal notation
  $border_colors = &$colors;


  // Materials array
  // key => material name, value => array => weight in ounces, price per square-inch
  $materials = array(
    'Indoor Vinyl' => array(
      'weight' => '2',
      'price' => '.04'
    ),
    'Outdoor Vinyl' => array(
      'weight' => '2',
      'price' => '.04'
    ),
    'Chalkboard Vinyl' => array(
      'weight' => '2.5',
      'price' => '.05'
    ),
    'Patterned Vinyl' => array(
      'weight' => '2',
      'price' => '.06'
    )
  );

  // Color array
  // key => color name, value => hexadecimal notation
  $colors = array(
    '4d2400' => '#4d2400',
    'd2ae7f' => '#d2ae7f',
    'ce7318' => '#ce7318',
    '373abf' => '#373abf',
    'b28808' => '#b28808',
    'a8b1b8' => '#a8b1b8',
    'e9d3ae' => '#e9d3ae',
    '9a9b9f' => '#9a9b9f',
    '1e8b9a' => '#1e8b9a',
    '2ca443' => '#2ca443',
    '221f20' => '#221f20',
    'a4aead' => '#a4aead',
    '595d5e' => '#595d5e',
    'e1e5e6' => '#e1e5e6',
    'c6880f' => '#c6880f',
    '1271ae' => '#1271ae',
    '919465' => '#919465',
    '21949c' => '#21949c',
    'c3e397' => '#c3e397',
    'b8b6a9' => '#b8b6a9',
    '73787d' => '#73787d',
    'b1d1ea' => '#b1d1ea',
    '5abfd3' => '#5abfd3',
    'c14150' => '#c14150',
    'fbd395' => '#fbd395',
    'e57e44' => '#e57e44',
    'b75772' => '#b75772',
    'edb7c4' => '#edb7c4',
    'e27fb6' => '#e27fb6',
    '5aad41' => '#5aad41',
    'fa6a04' => '#fa6a04',
    'd50a38' => '#d50a38',
    'fb8602' => '#fb8602',
    'ed0a6d' => '#ed0a6d',
    '4b176c' => '#4b176c',
    'c40842' => '#c40842',
    'a0254b' => '#a0254b',
    'ebaf01' => '#ebaf01',
    'fdb901' => '#fdb901',
    'fedb03' => '#fedb03',
    'faf705' => '#faf705',
    'ffe400' => '#ffe400',
    '269b67' => '#269b67',
    'b195c6' => '#b195c6',
    '5ec4b8' => '#5ec4b8',
    '29ada9' => '#29ada9',
    '39b7ea' => '#39b7ea',
    '034e9e' => '#034e9e',
    '034e9e' => '#249366',
    '125835' => '#125835',
    '7c7dbd' => '#7c7dbd',
    '1f9cdc' => '#1f9cdc',
    'f10d42' => '#f10d42',
    'f6a6bf' => '#f6a6bf',
    '1d96d8' => '#1d96d8',
    '0d037e' => '#0d037e',
    '325989' => '#325989',
    '0a578d' => '#0a578d',
    '922b45' => '#922b45',
    'ffffff' => '#ffffff'
  );

  // Checkout array
  // key => PayPal code, value => PayPal code value
  $checkout = array(
    'business' => 'FakeBusiness@thefake.com',
    'item_name' => 'Customized Vinyl Message',
    'shipping' => 5.00, // Overwritten with JavaScript
    'handling' => 1.00,
    'currency_code' => 'USD',
    'lc' => 'US'
  );
